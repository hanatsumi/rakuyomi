{
  "packages": {
    ".#koreader": "",
    "lua-language-server": "latest",
    "rustup": "latest",
    "sqlx-cli": "latest",
    "cachix": "latest",
    "gcc": "13.2.0",
    "cargo-flamegraph": "latest",
    "luajitPackages.busted": "latest",
    "mold-wrapped": {
      "version": "latest",
      "excluded_platforms": [
        "x86_64-darwin",
        "aarch64-darwin",
      ],
    },
    "clang": "latest",
    "libiconv": {
      "version": "latest",
      "excluded_platforms": [
        "x86_64-linux",
      ],
    },
    "darwin.apple_sdk.frameworks.SystemConfiguration": {
      "platforms": [
        "x86_64-darwin",
        "aarch64-darwin",
      ],
    },
    "poetry": {
      "version": "latest",
      "disable_plugin": true,
    },
    "python313Full": {
      "version": "latest",
      "disable_plugin": true,
    },
    "python313Packages.tkinter": "latest",
  },
  "env": {
    "PROJECT_DIR": "$PWD",
  },
  "shell": {
    "init_hook": [
      "cachix use rakuyomi",
      ". conf/set-env.sh",
      ". conf/write-luarc.sh",
      "sh -c 'cd $PROJECT_DIR/backend && cargo fetch'",
    ],
    "scripts": {
      "check-format": [
        "sh -c 'cd $PROJECT_DIR/backend && cargo fmt --check'",
      ],
      "check-lint": [
        "sh -c 'cd $PROJECT_DIR/backend && cargo clippy -- -D warnings'",
        "python3 ci/lua-language-server-check.py frontend/",
      ],
      "fix-rust-format": [
        "sh -c 'cd $PROJECT_DIR/backend && cargo fmt --all'",
      ],
      "fix-rust-lint": [
        "sh -c 'cd $PROJECT_DIR/backend && cargo clippy --fix --allow-dirty -- -D warnings'",
      ],
      "dev": [
        ". tools/run-koreader-with-plugin.sh",
      ],
      "prepare-sql-queries": [
        ". tools/prepare-sqlx-queries.sh",
      ],
      "remote-install": [
        "python3 tools/install-into-remote-koreader.py",
      ],
      "test-frontend": [
        "busted -C frontend/rakuyomi.koplugin .",
      ],
      "test-e2e": [
        "sh -c 'cd $PROJECT_DIR/e2e-tests && poetry env use $(which python) && poetry install --no-root && poetry run pytest $@'",
      ],
    },
  },
  "nixpkgs": {
    "commit": "f80ac848e3d6f0c12c52758c0f25c10c97ca3b62",
  },
}